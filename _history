{"entries":[{"timestamp":1743926279673,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"37\" y=\"19\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"237\" y=\"22\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"blocksprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":234,"start2":234,"length1":70,"length2":44}]},{"type":"added","filename":"custom.ts","value":"let i2c_address = 48\n\nenum Motor {\n    //% block=\"links\"\n    M0 = 0,\n    //% block=\"rechts\"\n    M1 = 1\n}\n\nenum Richting {\n    //% block=\"vooruit\"\n    D0 = 0,\n    //% block=\"achteruit\"\n    D1 = 1\n}\n\nenum LED {\n    //% block=\"links\"\n    L0 = 0,\n    //% block=\"rechts\"\n    L1 = 1\n}\n\n//% color=\"#AA278D\"\nnamespace SmartCar {\n\n    //% block=\"motor $motor richting $richting snelheid $snelheid\"\n    //% snelheid.min=0 snelheid.max=255 snelheid.defl=100\n    //% group=\"Motor\" weight=50\n    export function motor(motor: Motor, richting: Richting, snelheid: number) {\n        if (motor == 0) {\n            if (richting == 0) {\n                i2c_w(0x01, 0);\n                i2c_w(0x02, snelheid);\n            }\n            if (richting == 1) {\n                i2c_w(0x01, snelheid);\n                i2c_w(0x02, 0);\n            }\n        }\n        if (motor == 1) {\n            if (richting == 0) {\n                i2c_w(0x03, snelheid);\n                i2c_w(0x04, 0);\n            }\n            if (richting == 1) {\n                i2c_w(0x03, 0);\n                i2c_w(0x04, snelheid);\n            }\n        }\n    }\n\n    //% block=\"motor $motor stop\"\n    //% group=\"Motor\" weight=55\n    export function stop(motor: Motor) {\n        if (motor == 0) {\n            i2c_w(0x01, 0);\n            i2c_w(0x02, 0);\n        }\n        if (motor == 1) {\n            i2c_w(0x03, 0);\n            i2c_w(0x04, 0);\n        }\n    }\n\n    //% block=\"rood $red groen $green blauw $blue\"\n    //% red.min=0 red.max=255\n    //% green.min=0 green.max=255\n    //% blue.min=0 blue.max=255\n    //% group=\"LED\" weight=60\n    export function rgb(red: number, green: number, blue: number): number {\n        return packRGB(red, green, blue);\n    }\n\n    //% block=\"LED $led kleur $rgb\" \n    //% group=\"LED\" weight=65\n    export function set_led(led: LED, rgb: number) {\n        let r = 255 - unpackR(rgb);\n        let g = 255 - unpackG(rgb);\n        let b = 255 - unpackB(rgb);\n\n        if (led == 0) {\n            i2c_w(0x08, r);\n            i2c_w(0x07, g);\n            i2c_w(0x06, b);\n        }\n        if (led == 1) {\n            i2c_w(0x09, r);\n            i2c_w(0x0a, g);\n            i2c_w(0x05, b);\n        }\n    }\n\n}\n\nfunction packRGB(r: number, g: number, b: number): number {\n    return ((r & 0xFF) << 16) | ((g & 0xFF) << 8) | (b & 0xFF);\n}\nfunction unpackR(rgb: number): number {\n    let r = (rgb >> 16) & 0xFF;\n    return r;\n}\nfunction unpackG(rgb: number): number {\n    let g = (rgb >> 8) & 0xFF;\n    return g;\n}\nfunction unpackB(rgb: number): number {\n    return (rgb) & 0xFF;\n    //let b = (rgb) & 0xFF;\n    //return b;\n}\n\nfunction i2c_w(reg: number, value: number) {\n    let buf = pins.createBuffer(2)\n    buf[0] = reg\n    buf[1] = value\n    pins.i2cWriteBuffer(i2c_address, buf)\n}\n\n"}]},{"timestamp":1743926614041,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"65t=_Pn,8e+s]6IA)6(r\""],[0," x=\""],[-1,"0"],[1,"37"],[0,"\" y=\""],[-1,"0"],[1,"19"],[0,"\"></"]],"start1":100,"start2":100,"length1":45,"length2":21},{"diffs":[[0,"ver\""],[-1," id=\"S@bg{v]LhvT+7Q1G-L=U\""],[0," x=\"2"],[-1,"00"],[1,"37"],[0,"\" y=\""],[-1,"3"],[1,"22"],[0,"\"></"]],"start1":151,"start2":151,"length1":47,"length2":22}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":263,"start2":263,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1743926279672,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"KS4036F Smart Robot Car\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1743927102646}